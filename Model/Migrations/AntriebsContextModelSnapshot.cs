// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Configurations;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(AntriebsContext))]
    partial class AntriebsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Model.Entities.Answers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ANSWER_ID");

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("ANSWER_TEXT");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ISCORRECT");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("QUESTION_ID");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("ANSWERS");
                });

            modelBuilder.Entity("Model.Entities.Questions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QUESTION_ID");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("QUESTION_TEXT");

                    b.HasKey("Id");

                    b.ToTable("QUESTIONS");
                });

            modelBuilder.Entity("Model.Entities.Scores", b =>
                {
                    b.Property<int>("Question_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QUESTION_ID");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("PLAYER_NAME");

                    b.Property<int>("Score")
                        .HasColumnType("int")
                        .HasColumnName("SCORE");

                    b.HasKey("Question_Id");

                    b.ToTable("SCORES");
                });

            modelBuilder.Entity("Model.Entities.Answers", b =>
                {
                    b.HasOne("Model.Entities.Questions", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });
#pragma warning restore 612, 618
        }
    }
}
